Public textFileName As String


Sub openDialog()
    Dim fd As Office.FileDialog
    Dim objfso As New FileSystemObject
    Dim textFileName As String ' The file path (including filename and ext)
    Dim sourceBook As Workbook ' Where to copy from
    Dim targetBook As Workbook ' Where to copy to
    
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    
    ' Prompt the user to select the new file
    With fd
        .InitialFileName = "\\sv-hfi-014\Analysis\Encounter_Reporting\NY\PHSP_Encounters\Reconcilations\DWH_Load_Rec\"
        .AllowMultiSelect = False
        .Title = "Please select the file."
        .Show
        .Filters.Add "ALL Files", "*.*"
        ' Assign the filepath selected to textfilename variable
        
        textFileName = .SelectedItems(1)
        
   End With
   
   ' Debugging
   MsgBox textFileName
   
   ' Reference: https://stackoverflow.com/questions/29092465/copy-sheet-from-one-wb-to-another-using-vba-without-opening-destination-wb
   Set sourceBook = Application.Workbooks.Open(textFileName, _
        UpdateLinks:=False, _
        ReadOnly:=True, _
        AddToMRU:=False)
        
    sourceBook.Sheets(1).Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    sourceBook.Sheets(2).Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
   sourceBook.Close
   
  
End Sub


'this is for checking dups


Sub mao_002_dup()

Dim cmsin As Worksheet

Dim x As Integer

Dim lastrow As Integer

Set cmsin = ThisWorkbook.Worksheets("CMS IN")

lastrow = cmsin.Cells(cmsin.Rows.Count, "a").End(xlUp).Row
cmsin.Activate

Range("AF1").Value = "DUP Indicator"

For x = 2 To lastrow
    If Cells(x, "AE").Value <> Cells(x, "Y").Value Then
       Cells(x, "AF").Value = "False"
    Else
    
    End If
    
Next x
 
 
    
    





End Sub




